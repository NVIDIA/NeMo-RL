# GRPO Algorithm Configuration
defaults: "grpo_math_1B.yaml"

grpo:
  num_prompts_per_step: 32
  num_generations_per_prompt: 16
  max_num_steps: 1000000
  normalize_rewards: true
  use_leave_one_out_baseline: true
  val_period: 10
  val_at_start: false
  max_val_samples: 256
  val_batch_size: 256

loss_fn:
  reference_policy_kl_penalty: 0.01
  ratio_eps_min: 0.2
  ratio_eps_max: 0.2

checkpointing:
  enabled: false
  checkpoint_dir: "results/grpo"
  metric_name: "val_reward"
  higher_is_better: true
  keep_top_k: 3
  save_period: 10

policy:
  model_name: "Qwen/Qwen2.5-1.5B"
  train_global_batch_size: 512
  train_micro_batch_size: 2
  generation_batch_size: 64 # Only used when generating using megatron backend
  logprob_batch_size: 4
  max_total_sequence_length: 1024
  precision: "bfloat16"
  tensor_model_parallel_size: 1
  pipeline_model_parallel_size: 1
  context_parallel_size: 1

  dtensor_cfg:
    enabled: false
  
  max_grad_norm: 1.0

  megatron_cfg:
    enabled: true
    empty_unused_memory_level: 1
    
    optimizer:
      optimizer: "adam"
      lr: 5.0e-6
      min_lr: 5.0e-7
      weight_decay: 0.01
      bf16: false
      fp16: false
      params_dtype: "float32"

      #adam
      adam_beta1: 0.9
      adam_beta2: 0.999
      adam_eps: 1e-8

      #sgd
      sgd_momentum: 0.9

      #distributed optimizer
      use_distributed_optimizer: true
      use_precision_aware_optimizer: true
      
      clip_grad: ${policy.max_grad_norm}
      
    scheduler:
      start_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      end_weight_decay: ${policy.megatron_cfg.optimizer.weight_decay}
      weight_decay_incr_style: "constant"
      lr_decay_style: "constant"
      lr_decay_iters: null
      lr_warmup_iters: 50
      lr_warmup_init: 5.0e-7

  generation:
    backend: "megatron"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    vllm_cfg:
      tensor_parallel_size: 1
      gpu_memory_utilization: 0.6
      max_model_len: ${policy.max_total_sequence_length}

data:
  max_input_seq_length: ${policy.max_total_sequence_length} # upper bound, real truncation occurs at vllm.max_model_len
  prompt_file: "examples/prompts/cot.txt"
  system_prompt_file: null
  dataset_name: "OpenMathInstruct-2"
  
env:
  math:
    num_workers: 8

logger:
  log_dir: "logs"  # Base directory for all logs
  num_val_samples_to_print: 0 # Number of validation samples to pretty print on terminal
  wandb_enabled: false
  tensorboard_enabled: false
  monitor_gpus: false  # If true, will monitor GPU usage and log to wandb and/or tensorboard
  wandb:
    project: "grpo-dev"
    name: "sj_megatron_1B"
  tensorboard: {}
  gpu_monitoring:
    collection_interval: 10  # How often to collect GPU usage metrics (in seconds)
    flush_interval: 10  # How often to flush GPU usage metrics to the loggers (in seconds)

cluster:
  gpus_per_node: 1
  num_nodes: 1
